<!DOCTYPE html>
<html>
<head>
	<title></title>
	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

	<!-- Optional theme -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
</head>
<body>
	<div class="container">

		<h1>Reference solution</h1>

		<div>
			<form id="form">
				<div class="form-group">
					<label for="from">From:</label>
					<input type="number" class="form-control" id="from" placeholder="From" value="1">
				</div>
				<div class="form-group">
					<label for="to">To:</label>
					<input type="number" class="form-control" id="to" placeholder="To" value="20">
				</div>
				<button type="submit" class="btn btn-default">Load</button>
			</form>
		</div>

		<hr />

		<div id="data" style="display: none">
			<table class="table table-condensed table-bordered">
				<thead>
					<tr>
						<th>Index</th>
						<th>Slot</th>
						<th>City</th>
						<th>Velocity</th>
					</tr>
				</thead>
				<tbody id="table_body">

				</tbody>
			</table>
		</div>

		<div class="alert alert-danger" id="error" style="display: none">

		</div>
	</div>

	<script>
	// Times
	// Initial solution: 20
	// Error handling, debugged: 40
	// Cheap rate limit solution: 45
  // After switching to token thing: 1:30

	let nextRequestToken;

	init();

	// *******************************************************************************************

	function Criteria(from, to) {
		this.from = from;
		this.to = to;
	}

	function getCriteria() {
		return new Criteria(
			Number(document.getElementById('from').value) || 0,
			Number(document.getElementById('to').value) || 0
		);
	}

	function getData(criteria, token) {
		let url = `https://ossified-coil.glitch.me/data?from=${criteria.from}&to=${criteria.to}`;
		if (token) {
			url += '&token=' + token;
		}
		return fetch(url)
			.then(response => {
				return response.json()
					.then(result => {
						if (response.status >= 400) {
							throw (result.error || { message: "Error " + response.status });
						}
						return result;
					});
			});
	}

	function normalizeData(rawData, criteria) {
		const data = [];
		let i = 0
		for (let index = criteria.from; index <= criteria.to; index++) {
			const record = rawData[i];
			if (record && record.index === index) {
				data.push(record);
				i++;
			} else {
				data.push({ index: index, slot: null, city: null, velocity: null });
			}
		}
		return data;
	}

	function domSetVisible(element, visible) {
		element.style.display = visible ? 'block': 'none';
	}

	function render(err, data) {
		const errorEl = document.getElementById('error');
		domSetVisible(errorEl, !!err);
		domSetVisible(document.getElementById('data'), !err);

		if (err) {
			errorEl.innerText = err.message;
			return;
		}

		const rows = data.map(item => {
			return `
				<tr>
					<td>${item.index}</td>
					<td>${item.slot || 0}</td>
					<td>${item.city || 'None'}</td>
					<td>${(item.velocity || 0).toFixed(2)}</td>
				</tr>`;
		});

		document.getElementById('table_body').innerHTML = rows.join('\n');
	}

	function update() {
		const criteria = getCriteria();
		
		const token = nextRequestToken;
		if (token === null) {
			// Prevent ban
			return;
		}
		nextRequestToken = null;

		getData(criteria, token)
			.then(
				result => {
					nextRequestToken = result.token;
					data = normalizeData(result.data, getCriteria());
					render(null, data);
				},
				error => {
					nextRequestToken = token;
					render(error);
				}
			);
	}

	function init() {
		document.getElementById('form').addEventListener('submit', function (e) {
			e.preventDefault();
			update();
		});
	}
	</script>
</body>
</html>